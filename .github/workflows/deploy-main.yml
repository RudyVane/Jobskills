name: Deploy from main
on:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [main]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
concurrency:
  group: continuous-deployment
  cancel-in-progress: true
jobs:
  docker:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    outputs:
      image-id: ${{ steps.get-docker-id.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - uses: DeterminateSystems/nix-installer-action@v10
        with:
          extra-conf: |
            max-jobs = 0
      - uses: DeterminateSystems/magic-nix-cache-action@v4
      - name: Login to ghcr.io
        run: |
          nix run .#skopeo -- login \
          -u '${{ github.actor }}' \
          -p '${{ secrets.GITHUB_TOKEN }}' \
          '${{ env.REGISTRY }}'
      - name: Deploy to ghcr.io
        run: "nix run .#deploy-image -- docker://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
      - id: get-docker-id
        name: Determine docker image tag
        run: |
          set -Eeu
          echo "tag=$(nix eval --json '.#docker-image.imageTag')" >> "$GITHUB_OUTPUT"
  set-tag:
    needs: docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Substitute image tag
        run: |
          IMAGE_TAG=${{needs.docker.outputs.image-id}}
          sed -i "s/jobskills:latest/jobskills:$IMAGE_TAG/g" docker-compose.yml
      - name: Push continuous tag
        run: |
          git checkout -B current-deployment
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add docker-compose.yml
          git commit -m "continuous deployment"
          git push origin current-deployment -f
  deploy:
    needs: set-tag
    runs-on: ubuntu-latest
    environment: Deploy
    steps:
      - name: Invoke deployment hook
        uses: distributhor/workflow-webhook@v3
        env:
          webhook_url: ${{ secrets.PORTAINER_WEBHOOK_URL }}${{ secrets.PORTAINER_STACK_ID }}
          webhook_secret: ${{ secrets.NGROK_SECRET_TOKEN }}
